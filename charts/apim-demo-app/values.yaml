nameOverride: ""
fullnameOverride: ""
replicaCount: 1

image:
  repository: gcacrapim.azurecr.io/apim-demo-app
  pullPolicy: IfNotPresent
  tag: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: apim-be-dev.gc.bartbase.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: gc-bartbase
      hosts:
        - apim-be-dev.gc.bartbase.com

resources:
   limits:
     cpu: 750m
     memory: 750Mi
   requests:
     cpu: 250m
     memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 11
  targetCPUUtilizationPercentage: 85
  targetMemoryUtilizationPercentage: 85

apimPublisher:
  enable: true
  image: gcacrapim.azurecr.io/apim-publisher
  version: 4.9.0-1
  accessSecret: apim-access

apim:
  openApiSpec: |
    ---
    openapi: 3.0.1
    info:
      title: OpenAPI definition
      version: v0
    servers:
      - url: http://localhost:8080
        description: Generated server url
    paths:
      "/version":
        get:
          tags:
            - api-controller
          operationId: getVersion
          responses:
            '200':
              description: OK
              content:
                "*/*":
                  schema:
                    type: string
      "/health":
        get:
          tags:
            - api-controller
          operationId: healthCheck
          responses:
            '200':
              description: OK
              content:
                "*/*":
                  schema:
                    type: string
      "/greet":
        get:
          tags:
            - api-controller
          operationId: greet
          parameters:
            - name: name
              in: query
              required: true
              schema:
                type: string
          responses:
            '200':
              description: OK
              content:
                "*/*":
                  schema:
                    type: string
    components: {}
  apiInformation: |
    {
      "properties": {
        "apiRevision": "1",
        "authenticationSettings": { },
        "contact": {
          "email": "apiteam@swagger.io"
        },
        "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key \u0060special-key\u0060 to test the authorization filters.",
        "displayName": "Swagger Petstore",
        "isCurrent": true,
        "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "path": "",
        "protocols": [
          "http",
          "https"
        ],
        "serviceUrl": "https://petstore.swagger.io/v2",
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "subscriptionRequired": true,
        "termsOfServiceUrl": "http://swagger.io/terms/"
      }
    }

  policy: |
    <policies>
    	<inbound />
    	<backend>
    		<forward-request />
    	</backend>
    	<outbound />
    </policies>

  apis: |
    [
      {
        "name": "swagger-petstore"
      },
      {
        "name": "swagger-petstore-v2"
      },
      {
        "name": "swagger-petstore-v3"
      }
    ]
