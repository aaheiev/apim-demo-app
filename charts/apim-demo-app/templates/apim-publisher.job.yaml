{{- if .Values.apimPublisher.enable -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-publisher"
  labels:
    {{- include "apim-demo-app.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        {{- include "apim-demo-app.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: publisher
          image: {{ .Values.apimPublisher.image }}:{{ .Values.apimPublisher.version }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /usr/local/bin/publisher
          env:
            - name: API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH
              value: /apimartifacts
          envFrom:
            - secretRef:
                name: {{ .Values.apimPublisher.accessSecret }}
            - configMapRef:
                name: {{ .Release.Name }}-apim
          volumeMounts:
            - mountPath: /apimartifacts/apis/{{ .Values.apim.api_name }}/apiInformation.json
              name: api-information
              subPath: apiInformation.json
            - mountPath: /apimartifacts/apis/{{ .Values.apim.api_name }}/specification.yaml
              name: api-spec
              subPath: specification.yaml
      volumes:
        - name: api-information
          configMap:
            name: {{ .Release.Name }}-apim-artifacts
            items:
              - key: apiInformation.json
                path: apiInformation.json
        - name: api-spec
          configMap:
            name: {{ .Release.Name }}-apim-artifacts
            items:
              - key: specification.yaml
                path: specification.yaml

{{- end }}
